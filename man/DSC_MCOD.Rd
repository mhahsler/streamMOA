% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DSOutlier_MCOD.R
\name{DSC_MCOD}
\alias{DSC_MCOD}
\alias{DSC_MCOD_MOA}
\alias{DSOutlier_MCOD}
\alias{DSOutlier_MCOD_MOA}
\alias{MCOD}
\title{Micro-cluster Continuous Outlier Detector (MCOD)}
\usage{
DSC_MCOD(r = 0.1, t = 50, w = 1000, recheck_outliers = TRUE)

DSOutlier_MCOD(r = 0.1, t = 50, w = 1000, recheck_outliers = TRUE)
}
\arguments{
\item{r}{Defines the micro-cluster radius}

\item{t}{Defines the number of neighbors (k in the article)}

\item{w}{Defines the window width in data points}

\item{recheck_outliers}{Defines that the MCOD algorithm allows re-checking
of detected outliers.}
}
\value{
An object of class \code{DSC_MCOD} (subclass of \link{DSOutlier},
\link{DSC_Micro}, \link{DSC_MOA} and \link{DSC}).
}
\description{
Class interfaces the MOA implementation of the MCOD algorithm for
distance-based data stream outlier detection.
}
\details{
The algorithm detects density-based outliers. An object \eqn{x} is defined
to be an outlier if there are less than \eqn{t} objects lying at distance at
most \eqn{r} from \eqn{x}.
}
\examples{
### Example 1: Use MCOD to cluster and then retrieve the identified outliers.
###   We use the same data to see what points are outliers.
set.seed(1000)
stream <- DSD_Gaussians(k = 3, d = 2, noise = 0.05, separation = .35) \%>\%
  DSD_Memory(n = 100)

mcod <- DSC_MCOD(r = .1, t = 3, w = 100)
update(mcod, stream, 100)
mcod

# plot micro-clusters with marked outliers (red crosses)
reset_stream(stream)
plot(mcod, stream, n = 100)
get_outlier_positions(mcod)

# plot without outliers
reset_stream(stream)
plot(mcod, stream, n = 100, outliers = FALSE)

reset_stream(stream)
 evaluate(mcod, stream, n = 100, type = "micro",
  measure = c("crand", "noisePrecision", "outlierjaccard"))

# Example 2: two-stage clustering
micro <- DSC_MCOD(r = .1, t = 3, w = 100)
macro <- DSC_Kmeans(3)
dsc <- DSC_TwoStage(micro, macro)

reset_stream(stream)
evaluate(dsc, stream, n = 100, type = "macro",
  measure = c("crand", "noisePrecision", "outlierjaccard"))

# plot the clustering
reset_stream(stream)
plot(dsc, stream, n = 100, type = "both")

# plot the MCOD outliers
reset_stream(stream)
plot(dsc$micro, stream, n = 100, outliers = TRUE)
}
\references{
Kontaki M, Gounaris A, Papadopoulos AN, Tsichlas K, and
Manolopoulos Y (2016). Efficient and flexible algorithms for monitoring
distance-based outliers over data streams. Information systems, vol.
55, pp. 37-53. \doi{10.1109/ICDE.2011.5767923}
}
\seealso{
Other DSC_MOA: 
\code{\link{DSC_BICO_MOA}()},
\code{\link{DSC_CluStream}()},
\code{\link{DSC_ClusTree}()},
\code{\link{DSC_DStream_MOA}()},
\code{\link{DSC_DenStream}()},
\code{\link{DSC_MOA}()},
\code{\link{DSC_StreamKM}()}
}
\author{
Dalibor KrleÅ¾a
}
\concept{DSC_MOA}
